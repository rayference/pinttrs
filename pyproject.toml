[build-system]
build-backend = "pdm.pep517.api"
requires = ["pdm-pep517"]

[project]
authors = [{ name = "Vincent Leroy", email = "vincent.leroy@rayference.eu" }]
classifiers = [
    "Development Status :: 6 - Mature",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "attrs>=21.3",
    "pint>=0.16",
]
description = "Pint meets attrs."
dynamic = ["version"]
keywords = []
license = { file = "LICENSE" }
name = "pinttrs"
readme = "README.md"
requires-python = ">=3.8"

[project.optional-dependencies]

[project.urls]
Changelog = "https://github.com/leroyvn/pinttrs/blob/main/CHANGELOG.md"
Documentation = "https://pinttrs.readthedocs.io"
Homepage = "https://github.com/leroyvn/pinttrs"
Issues = "https://github.com/leroyvn/pinttrs/issues"
Repository = "https://github.com/leroyvn/pinttrs"

[tool.pdm]
package-dir = "src"
version = { use_scm = true }

[tool.pdm.dev-dependencies]
docs = [
    "sphinx>=4.5",
    "furo>=2021.11",
    "myst-parser>=0.16",
    "sphinx-autobuild>=2021.3",
    "sphinx-copybutton>=0.4",
    "sphinx-autodoc-typehints",
]
format = [
    "black>=22.1",
    "ruff>=0.0.245",
]
maintain = []
quality = []
security = []
tests = [
    "pytest>=6.2",
    "pytest-xdist>=2.4",
    "pytest-cov>=3.0",
    "xdoctest>=0.15.0",
]
typing = []

[tool.black]
line-length = 88

[tool.ruff]
select = ["I"]

[tool.ruff.isort]
relative-imports-order = "closest-to-furthest"

[tool.conda-lock]
channels = ["conda-forge", "defaults"]

[tool.conda-lock.dependencies]
pip = "*"

[tool.coverage.run]
branch = true
parallel = true
source = [
    "src/",
]

[tool.coverage.paths]
equivalent = [
    "src/",
    "__pypackages__/",
]

[tool.coverage.report]
omit = [
    "src/*/__init__.py",
    "src/*/_version.py",
]
precision = 2
show_missing = true
skip_covered = true

[tool.coverage.html]
directory = "./reports/coverage/html"

[tool.coverage.json]
output = "./reports/coverage/coverage.json"

[tool.pytest.ini_options]
addopts = "--doctest-glob='*.rst'"
norecursedirs = [
    ".git",
    ".env",
    "dist",
    "build",
    "__pypackages__",
]
python_files = [
    "test_*.py",
    "*_test.py",
    "tests.py",
]
testpaths = [
    "tests",
    "docs",
]
